// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<Modal
  animationType="slide"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
  testID="auth-modal"
  transparent={true}
  visible={true}
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#000000",
        "color": "#FFFFFF",
        "flex": 1,
        "height": "100%",
        "justifyContent": "center",
        "paddingHorizontal": 20,
        "width": "100%",
      }
    }
  >
    <Text
      style={
        {
          "color": "#FFFFFF",
          "fontSize": 30,
          "fontWeight": "bold",
          "left": 30,
          "marginBottom": 30,
          "position": "absolute",
          "textAlign": "left",
          "top": 30,
        }
      }
    >
      Connectez-vous
    </Text>
    <View
      style={
        {
          "borderColor": "#FFFFFF",
          "borderRadius": 20,
          "borderWidth": 1,
          "color": "#FFFFFF",
          "flexDirection": "row",
          "height": 50,
          "marginBottom": 15,
          "paddingHorizontal": 20,
          "width": "100%",
        }
      }
    >
      <Text />
      <TextInput
        onChangeText={[Function]}
        placeholder="Nom d'utilisateur"
        placeholderTextColor="#FFF"
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#000",
            "color": "#FFFFFF",
            "flex": 1,
            "height": 47,
            "justifyContent": "flex-start",
          }
        }
        testID="auth-login"
        value=""
      />
    </View>
    <View
      style={
        {
          "borderColor": "#FFFFFF",
          "borderRadius": 20,
          "borderWidth": 1,
          "color": "#FFFFFF",
          "flexDirection": "row",
          "height": 50,
          "marginBottom": 15,
          "paddingHorizontal": 20,
          "width": "100%",
        }
      }
    >
      <Text />
      <TextInput
        onChangeText={[Function]}
        placeholder="Password"
        placeholderTextColor="#FFF"
        secureTextEntry={true}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#000",
            "color": "#FFFFFF",
            "flex": 1,
            "height": 47,
            "justifyContent": "flex-start",
          }
        }
        testID="auth-password"
        value=""
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignSelf": "center",
            "margin": "auto",
            "marginLeft": "auto",
            "position": "relative",
            "right": 0,
          }
        }
      >
        <Text />
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "color": "#FFFFFF",
          "width": "100%",
        }
      }
      testID="auth-button"
    >
      <ViewManagerAdapter_ExpoLinearGradient
        proxiedProperties={
          {
            "colors": [
              4292159654,
              4287513773,
            ],
            "endPoint": [
              1,
              1,
            ],
            "locations": undefined,
            "startPoint": [
              0,
              0.5,
            ],
          }
        }
        style={
          {
            "borderRadius": 15,
            "marginTop": 50,
            "paddingHorizontal": 40,
            "paddingVertical": 20,
          }
        }
      >
        <Text
          style={
            {
              "color": "#FFFFFF",
              "textAlign": "center",
            }
          }
        >
          Se connecter
        </Text>
      </ViewManagerAdapter_ExpoLinearGradient>
    </View>
  </View>
</Modal>
`;
